@import './styles/breakpoints';

@keyframes slideInUp {
  from {
    opacity: 0;
    transform: translateY(100%);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.8);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fillBar {
  from {
    width: 0;
  }
  to {
    width: var(--target-width);
  }
}

@keyframes glow {
  0%, 100% {
    opacity: 0.3;
    transform: scale(1);
  }
  50% {
    opacity: 0.8;
    transform: scale(1.1);
  }
}

@keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-10px);
  }
  60% {
    transform: translateY(-5px);
  }
}

@keyframes shimmer {
  0% {
    background-position: -200px 0;
  }
  100% {
    background-position: calc(200px + 100%) 0;
  }
}

.pokemonDetails {
  background: linear-gradient(
    180deg,
    var(--primary-color, var(--red)) 0%,
    var(--primary-color-dark, #c41e3a) 40%,
    var(--white) 40%,
    var(--white) 100%
  );
  border-radius: 24px 24px 0 0;
  display: flex;
  flex-direction: column;
  height: 100vh;
  max-height: 800px;
  overflow: hidden;
  position: relative;
  width: 100%;
  max-width: 480px;
  margin: 0 auto;
  animation: slideInUp 0.6s cubic-bezier(0.4, 0, 0.2, 1);
  box-shadow: 
    0 20px 40px rgba(0, 0, 0, 0.15),
    0 10px 20px rgba(0, 0, 0, 0.1);

  @media (min-width: $sm) {
    max-width: 600px;
    border-radius: 24px;
    height: auto;
    max-height: 900px;
  }

  @media (min-width: $lg) {
    max-width: 700px;
  }

  &.loading,
  &.error {
    background: var(--white);
    align-items: center;
    justify-content: center;
    min-height: 400px;
  }
}

.header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1.5rem 1.5rem 1rem;
  position: relative;
  z-index: 2;

  @media (max-width: $xs) {
    padding: 1rem 1rem 0.75rem;
  }
}

.backButton {
  background: rgba(255, 255, 255, 0.2);
  border: none;
  border-radius: 50%;
  color: var(--white);
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.5rem;
  height: 40px;
  transition: all 0.3s ease;
  width: 40px;
  backdrop-filter: blur(10px);

  &:hover {
    background: rgba(255, 255, 255, 0.3);
    transform: translateX(-2px);
  }

  &:focus {
    outline: none;
    box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.5);
  }
}

.pokemonInfo {
  text-align: center;
  flex: 1;
}

.pokemonName {
  color: var(--white);
  font-size: 1.8rem;
  font-weight: 700;
  margin: 0 0 0.25rem;
  text-transform: capitalize;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  animation: fadeIn 0.8s ease-out 0.2s both;

  @media (max-width: $xs) {
    font-size: 1.5rem;
  }
}

.pokemonNumber {
  color: rgba(255, 255, 255, 0.8);
  font-size: 1rem;
  font-weight: 600;
  animation: fadeIn 0.8s ease-out 0.4s both;
}

.navigation {
  display: flex;
  gap: 0.5rem;
}

.navButton {
  background: rgba(255, 255, 255, 0.2);
  border: none;
  border-radius: 50%;
  color: var(--white);
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.2rem;
  height: 36px;
  transition: all 0.3s ease;
  width: 36px;
  backdrop-filter: blur(10px);

  &:hover {
    background: rgba(255, 255, 255, 0.3);
    transform: scale(1.1);
  }

  &:focus {
    outline: none;
    box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.5);
  }
}

.imageSection {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 0 2rem 2rem;
  position: relative;
  z-index: 1;

  @media (max-width: $xs) {
    padding: 0 1.5rem 1.5rem;
  }
}

.imageContainer {
  position: relative;
  margin-bottom: 1.5rem;
}

.imagePlaceholder {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 1;
}

.imageLoader {
  width: 120px;
  height: 120px;
  border-radius: 50%;
  background: linear-gradient(
    90deg,
    rgba(255, 255, 255, 0.1) 25%,
    rgba(255, 255, 255, 0.3) 50%,
    rgba(255, 255, 255, 0.1) 75%
  );
  background-size: 200% 100%;
  animation: shimmer 1.5s infinite;
}

.pokemonImage {
  width: 200px;
  height: 200px;
  object-fit: contain;
  filter: drop-shadow(0 8px 16px rgba(0, 0, 0, 0.2));
  transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
  opacity: 0;
  transform: scale(0.8);

  &.loaded {
    opacity: 1;
    transform: scale(1);
    animation: bounce 0.8s ease-out 0.3s;
  }

  @media (max-width: $xs) {
    width: 160px;
    height: 160px;
  }
}

.imageGlow {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 150px;
  height: 150px;
  background: radial-gradient(
    circle,
    var(--primary-color, var(--red)) 0%,
    transparent 70%
  );
  border-radius: 50%;
  opacity: 0.3;
  animation: glow 3s ease-in-out infinite;
  z-index: -1;
}

.typesContainer {
  display: flex;
  gap: 0.75rem;
  justify-content: center;
  flex-wrap: wrap;
}

.typeTag {
  background: var(--primary-color, var(--red));
  border-radius: 16px;
  color: var(--white);
  font-size: 0.8rem;
  font-weight: 600;
  padding: 0.5rem 1rem;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
  animation: scaleIn 0.6s ease-out both;
  backdrop-filter: blur(10px);
}

.tabNavigation {
  display: flex;
  background: var(--white);
  border-bottom: 1px solid rgba(0, 0, 0, 0.1);
  position: sticky;
  top: 0;
  z-index: 3;
}

.tabButton {
  background: transparent;
  border: none;
  color: var(--gray);
  cursor: pointer;
  flex: 1;
  font-size: 0.9rem;
  font-weight: 600;
  padding: 1rem;
  position: relative;
  transition: all 0.3s ease;
  text-transform: uppercase;
  letter-spacing: 0.5px;

  &:hover {
    color: var(--primary-color, var(--red));
    background: var(--primary-color-light, rgba(220, 10, 45, 0.05));
  }

  &.active {
    color: var(--primary-color, var(--red));

    &::after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      height: 3px;
      background: var(--primary-color, var(--red));
      border-radius: 3px 3px 0 0;
      animation: slideInLeft 0.3s ease-out;
    }
  }

  &:focus {
    outline: none;
    background: var(--primary-color-light, rgba(220, 10, 45, 0.1));
  }
}

.tabContent {
  flex: 1;
  overflow-y: auto;
  background: var(--white);
  padding: 1.5rem;

  @media (max-width: $xs) {
    padding: 1rem;
  }
}

.aboutTab {
  animation: fadeIn 0.5s ease-out;
}

.description {
  margin-bottom: 2rem;

  h3 {
    color: var(--black);
    font-size: 1.2rem;
    font-weight: 600;
    margin: 0 0 1rem;
  }

  p {
    color: var(--gray);
    font-size: 1rem;
    line-height: 1.6;
    margin: 0;
  }
}

.basicInfo {
  h3 {
    color: var(--black);
    font-size: 1.2rem;
    font-weight: 600;
    margin: 0 0 1rem;
  }
}

.infoGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
  gap: 1rem;

  @media (max-width: $xs) {
    grid-template-columns: 1fr 1fr;
    gap: 0.75rem;
  }
}

.infoItem {
  background: #f8f9fa;
  border-radius: 12px;
  padding: 1rem;
  text-align: center;
  transition: transform 0.3s ease;
  animation: scaleIn 0.6s ease-out both;

  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }

  @media (max-width: $xs) {
    padding: 0.75rem;
  }
}

.infoLabel {
  color: var(--gray);
  display: block;
  font-size: 0.8rem;
  font-weight: 500;
  margin-bottom: 0.5rem;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.infoValue {
  color: var(--black);
  display: block;
  font-size: 1.1rem;
  font-weight: 600;
}

.statsTab {
  animation: fadeIn 0.5s ease-out;
}

.statsContainer {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.statItem {
  animation: slideInLeft 0.6s ease-out both;
}

.statHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 0.5rem;
}

.statName {
  color: var(--black);
  font-size: 0.9rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.statValue {
  color: var(--gray);
  font-size: 1rem;
  font-weight: 700;
}

.statBar {
  background: #e9ecef;
  border-radius: 10px;
  height: 8px;
  overflow: hidden;
  position: relative;
}

.statFill {
  background: var(--primary-color, var(--red));
  height: 100%;
  border-radius: 10px;
  transition: width 0.8s cubic-bezier(0.4, 0, 0.2, 1);
  animation: fillBar 1s ease-out both;
  position: relative;

  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      90deg,
      transparent 0%,
      rgba(255, 255, 255, 0.3) 50%,
      transparent 100%
    );
    animation: shimmer 2s infinite;
  }
}

.totalStats {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: var(--primary-color-light, rgba(220, 10, 45, 0.1));
  border-radius: 12px;
  padding: 1rem;
  margin-top: 1rem;
  border: 2px solid var(--primary-color, var(--red));
}

.totalLabel {
  color: var(--primary-color, var(--red));
  font-size: 1rem;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.totalValue {
  color: var(--primary-color, var(--red));
  font-size: 1.5rem;
  font-weight: 800;
}

.evolutionTab {
  animation: fadeIn 0.5s ease-out;
}

.evolutionPlaceholder {
  text-align: center;
  padding: 3rem 2rem;
  color: var(--gray);
}

.evolutionIcon {
  font-size: 3rem;
  margin-bottom: 1rem;
  opacity: 0.7;
}

// Estados de erro
.errorContent {
  text-align: center;
  padding: 2rem;
  max-width: 400px;
}

.errorIcon {
  font-size: 3rem;
  margin-bottom: 1rem;
}

.errorTitle {
  color: var(--black);
  font-size: 1.5rem;
  font-weight: 600;
  margin: 0 0 1rem;
}

.errorMessage {
  color: var(--gray);
  font-size: 1rem;
  line-height: 1.5;
  margin: 0 0 2rem;
}

.errorActions {
  display: flex;
  gap: 1rem;
  justify-content: center;
  flex-wrap: wrap;
}

.retryButton,
.closeButton {
  border: none;
  border-radius: 25px;
  cursor: pointer;
  font-size: 0.9rem;
  font-weight: 600;
  padding: 0.75rem 1.5rem;
  transition: all 0.3s ease;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  min-width: 120px;

  &:focus {
    outline: none;
    transform: translateY(-1px);
  }
}

.retryButton {
  background: var(--red);
  color: var(--white);

  &:hover {
    background: #e53e3e;
    box-shadow: 0 4px 8px rgba(220, 10, 45, 0.3);
  }
}

.closeButton {
  background: var(--gray);
  color: var(--white);

  &:hover {
    background: #5a6268;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  }
}

// Responsividade específica
@media (max-width: $xs) {
  .pokemonDetails {
    border-radius: 0;
    height: 100vh;
    max-height: none;
  }

  .header {
    padding-top: 1.5rem; // Espaço para status bar
  }

  .tabContent {
    padding-bottom: 2rem; // Espaço extra no final
  }

  .infoGrid {
    grid-template-columns: 1fr;
  }

  .errorActions {
    flex-direction: column;
    align-items: center;
  }
}

// Redução de movimento para acessibilidade
@media (prefers-reduced-motion: reduce) {
  .pokemonDetails {
    animation: none;
  }

  .pokemonName,
  .pokemonNumber {
    animation: none;
  }

  .pokemonImage {
    &.loaded {
      animation: none;
    }
  }

  .typeTag,
  .infoItem,
  .statItem {
    animation: none;
  }

  .imageGlow {
    animation: none;
  }

  .statFill {
    animation: none;

    &::after {
      animation: none;
    }
  }

  .imageLoader {
    animation: none;
    background: rgba(255, 255, 255, 0.2);
  }
}

// Modo escuro
@media (prefers-color-scheme: dark) {
  .pokemonDetails {
    &.loading,
    &.error {
      background: #1a1a1a;
    }
  }

  .tabNavigation {
    background: #2a2a2a;
    border-bottom-color: rgba(255, 255, 255, 0.1);
  }

  .tabContent {
    background: #2a2a2a;
  }

  .description h3,
  .basicInfo h3,
  .statName,
  .errorTitle {
    color: var(--white);
  }

  .description p,
  .infoLabel,
  .statValue,
  .errorMessage {
    color: var(--light);
  }

  .infoItem {
    background: #3a3a3a;
  }

  .infoValue {
    color: var(--white);
  }

  .statBar {
    background: #3a3a3a;
  }

  .evolutionPlaceholder {
    color: var(--light);
  }
}